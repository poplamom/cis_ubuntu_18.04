---
# tasks/basic_system_settings.yml

- name: Disable unused filesystems
  block:
    - name: Disable mounting of cramfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install cramfs /bin/true"
        create: yes
      register: disable_cramfs
      tags: ["cis_1.1.1.1"]

    - name: Disable mounting of freevxfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install freevxfs /bin/true"
        create: yes
      register: disable_freevxfs
      tags: ["cis_1.1.1.2"]

    - name: Disable mounting of jffs2 filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install jffs2 /bin/true"
        create: yes
      register: disable_jffs2
      tags: ["cis_1.1.1.3"]

    - name: Disable mounting of hfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install hfs /bin/true"
        create: yes
      register: disable_hfs
      tags: ["cis_1.1.1.4"]

    - name: Disable mounting of hfsplus filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install hfsplus /bin/true"
        create: yes
      register: disable_hfsplus
      tags: ["cis_1.1.1.5"]

    - name: Disable mounting of udf filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install udf /bin/true"
        create: yes
      register: disable_udf
      tags: ["cis_1.1.1.6"]

- name: Check if automounting is enabled (cis_1.1.23)
  systemd:
    name: autofs
    state: stopped
    enabled: no
  register: automount_status
  when: is_ubuntu_18
  tags: ["cis_1.1.23"]

- name: Display message if automounting was disabled (cis_1.1.23)
  debug:
    msg: "Automounting was disabled."
  when: is_ubuntu_18
  tags: ["cis_1.1.23"]

- name: Disable USB Storage (cis_1.1.24)
  block:
    - name: Create /etc/modprobe.d/usb_storage.conf
      ansible.builtin.copy:
        dest: /etc/modprobe.d/usb_storage.conf
        content: "install usb-storage /bin/true"
        owner: root
        group: root
        mode: "0644"

    - name: Disable USB Storage in kernel
      ansible.builtin.modprobe:
        name: usb-storage
        state: absent
  when: is_ubuntu_18
  tags: ["cis_1.1.24"]

- name: Check if USB storage module is loaded (cis_1.1.24)
  command: lsmod | grep '^usb_storage '
  register: usb_storage_loaded
  changed_when: false
  failed_when: false
  when: is_ubuntu_18
  tags: ["cis_1.1.24"]

- name: Unload USB storage module if loaded (cis_1.1.24)
  command: rmmod usb_storage
  when: is_ubuntu_18 and usb_storage_loaded.rc == 0
  tags: ["cis_1.1.24"]

- name: Add USB storage module to blacklist (cis_1.1.24)
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    line: "blacklist usb_storage"
    create: yes
    state: present
  when: is_ubuntu_18
  tags: ["cis_1.1.24"]

- name: Update initramfs (cis_1.1.24)
  command: update-initramfs -u
  when: is_ubuntu_18
  tags: ["cis_1.1.24"]

# - name: Install AIDE (cis_1.3.1)
#   apt:
#     name: aide
#     state: present
#   when: is_ubuntu_18
#   tags: ["cis_1.3.1"]

# - name: Initialize AIDE database (cis_1.3.1)
#   command: aideinit
#   args:
#     creates: /var/lib/aide/aide.db.new.gz
#   when: is_ubuntu_18
#   tags: ["cis_1.3.1"]

# - name: Rename AIDE database (cis_1.3.1)
#   command: mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
#   args:
#     removes: /var/lib/aide/aide.db.new.gz
#   when: is_ubuntu_18
#   tags: ["cis_1.3.1"]

- name: Check if AIDE CRON job exists (cis_1.3.2)
  stat:
    path: /etc/cron.d/aide
  register: aide_cron_exists
  when: is_ubuntu_18
  tags: ["cis_1.3.2"]

- name: Create AIDE CRON job (cis_1.3.2)
  copy:
    dest: /etc/cron.d/aide
    content: "0 5 * * * root /usr/bin/aide.wrapper --config /etc/aide/aide.conf --check"
    owner: root
    group: root
    mode: "0644"
  when: is_ubuntu_18 and not aide_cron_exists.stat.exists
  tags: ["cis_1.3.2"]

- name: Ensure filesystem integrity is regularly checked (cis_1.3.2)
  block:
    - name: Create /etc/systemd/system/aidecheck.service
      ansible.builtin.copy:
        dest: /etc/systemd/system/aidecheck.service
        content: |
          [Unit]
          Description=Aide Check
          [Service]
          Type=simple
          ExecStart=/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check
          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: "0644"

    - name: Create /etc/systemd/system/aidecheck.timer
      ansible.builtin.copy:
        dest: /etc/systemd/system/aidecheck.timer
        content: |
          [Unit]
          Description=Aide check every day at 5AM
          [Timer]
          OnCalendar=*-*-* 05:00:00
          Unit=aidecheck.service
          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: "0644"

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable aidecheck.service
      ansible.builtin.systemd:
        name: aidecheck.service
        enabled: yes

    - name: Enable and start aidecheck.timer
      ansible.builtin.systemd:
        name: aidecheck.timer
        enabled: yes
        state: started
  when: is_ubuntu_18
  tags: ["cis_1.3.2"]

- name: Ensure permissions on bootloader config are not overridden (cis_1.4.1)
  block:
    - name: Set the correct chmod command in /usr/sbin/grub-mkconfig
      ansible.builtin.command:
        cmd: "sed -ri 's/chmod\\s+[0-7][0-7][0-7]\\s+\\$\\{grub_cfg\\}\\.new/chmod 400 \\${grub_cfg}.new/' /usr/sbin/grub-mkconfig"
      args:
        warn: false
      register: sed_chmod_result
      changed_when: '"1" in sed_chmod_result.stdout_lines'

    - name: Remove grep condition from /usr/sbin/grub-mkconfig
      ansible.builtin.command:
        cmd: "sed -ri 's/ && ! grep \"\\^password\" \\$\\{grub_cfg\\}.new >\\/dev\\/null//' /usr/sbin/grub-mkconfig"
      args:
        warn: false
      register: sed_grep_result
      changed_when: '"1" in sed_grep_result.stdout_lines'

    - name: Display sed results
      ansible.builtin.debug:
        msg: "Modified /usr/sbin/grub-mkconfig"
      when: '"1" in sed_chmod_result.stdout_lines or "1" in sed_grep_result.stdout_lines'
  when: is_ubuntu_18
  tags: ["cis_1.4.1"]

- name: Ensure authentication required for single user mode (cis_1.4.4)
  lineinfile:
    path: /lib/systemd/system/rescue.service
    line: 'ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"'
    insertafter: "ExecStart="
    state: present
  when: is_ubuntu_18
  tags: ["cis_1.4.4"]

- name: Check if ASLR is enabled (cis_1.5.2)
  command: sysctl kernel.randomize_va_space
  register: aslr_enabled
  changed_when: false
  when: is_ubuntu_18
  tags: ["cis_1.5.2"]

- name: Enable ASLR (cis_1.5.2)
  sysctl:
    name: kernel.randomize_va_space
    value: "2"
    state: present
    reload: yes
  when: is_ubuntu_18 and aslr_enabled.stdout.find("kernel.randomize_va_space = 2") == -1
  tags: ["cis_1.5.2"]

- name: Ensure ASLR setting persists across reboots (cis_1.5.2)
  lineinfile:
    path: /etc/sysctl.conf
    line: "kernel.randomize_va_space = 2"
    state: present
  when: is_ubuntu_18
  tags: ["cis_1.5.2"]

- name: Ensure message of the day is configured properly (cis_1.7.1)
  lineinfile:
    path: /etc/motd
    line: "Authorized uses only. All activity may be monitored and reported."
    create: yes
    state: present
  when: is_ubuntu_18
  tags: ["cis_1.7.1"]

- name: Ensure permissions on /etc/issue.net are configured (cis_1.7.2)
  ansible.builtin.file:
    path: /etc/issue.net
    owner: root
    group: root
    mode: "0644"
  when: is_ubuntu_18
  tags: ["cis_1.7.2"]

- name: Ensure permissions on /etc/issue are configured (cis_1.7.3)
  ansible.builtin.file:
    path: /etc/issue
    owner: root
    group: root
    mode: "0644"
  when: is_ubuntu_18
  tags: ["cis_1.7.3"]

- name: Ensure permissions on /etc/motd are configured (cis_1.7.4)
  ansible.builtin.file:
    path: /etc/motd
    owner: root
    group: root
    mode: "0644"
  when: is_ubuntu_18
  tags: ["cis_1.7.4"]

- name: Ensure remote login warning banner is configured properly (cis_1.7.5)
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^Banner"
    line: "Banner /etc/issue.net"
    state: present
  when: is_ubuntu_18
  tags: ["cis_1.7.5"]

- name: Ensure local login warning banner is configured properly (cis_1.7.6)
  copy:
    dest: /etc/pam.d/login
    content: |
      # Display the message of the day upon successful login.
      session    optional   pam_motd.so  motd=/run/motd.dynamic noupdate
      session    optional   pam_motd.so  motd=/etc/motd
    force: yes
  when: is_ubuntu_18
  tags: ["cis_1.7.6"]

- name: Ensure updates, patches, and additional security software are installed (cis_1.9)
  apt:
    upgrade: safe
    update_cache: yes
  when: is_ubuntu_18
  tags: ["cis_1.9"]

- name: Ensure time synchronization is in use (cis_2.1.1.1)
  block:
    - name: Check if NTP is installed
      package_facts:
        manager: auto
      register: ntp_installed

    - name: Check if chrony is installed
      package_facts:
        manager: auto
      register: chrony_installed

    - name: Ensure NTP or chrony is installed
      assert:
        that:
          - "'ntp' in ntp_installed.ansible_facts.packages or 'chrony' in chrony_installed.ansible_facts.packages"
        fail_msg: "Neither NTP nor chrony is installed. Please install one of them for time synchronization."
  when: is_ubuntu_18
  tags: ["cis_2.1.1.1"]

- name: Ensure systemd-timesyncd is configured (cis_2.1.1.2)
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: "^NTP="
    line: "NTP=your_ntp_server"
    state: present
  when: is_ubuntu_18
  tags: ["cis_2.1.1.2"]

- name: Ensure chrony is configured (cis_2.1.1.3)
  block:
    - name: Configure chrony
      lineinfile:
        path: /etc/chrony/chrony.conf
        regexp: "^server"
        line: "server your_ntp_server iburst"
        state: present

    - name: Restart chrony service
      ansible.builtin.systemd:
        name: chrony
        state: restarted
        daemon_reload: yes
  when: is_ubuntu_18 and ('chrony' in ansible_facts.packages)
  tags: ["cis_2.1.1.3"]

- name: Ensure ntp is configured (cis_2.1.1.4)
  block:
    - name: Configure ntp
      lineinfile:
        path: /etc/ntp.conf
        regexp: "^server"
        line: "server your_ntp_server iburst"
        state: present

    - name: Restart ntp service
      ansible.builtin.systemd:
        name: ntp
        state: restarted
        daemon_reload: yes
  when: is_ubuntu_18 and ('ntp' in ansible_facts.packages)
  tags: ["cis_2.1.1.4"]
# - name: Ensure certain services are not installed (cis_2.1.10-2.1.14, cis_2.1.16, cis_2.1.17)
#   block:
#     - name: Ensure HTTP server is not installed
#       ansible.builtin.apt:
#         name: apache2
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure IMAP and POP3 server are not installed
#       ansible.builtin.apt:
#         name: dovecot-imapd,dovecot-pop3d
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure Samba is not installed
#       ansible.builtin.apt:
#         name: samba
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure HTTP Proxy Server is not installed
#       ansible.builtin.apt:
#         name: squid
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure SNMP Server is not installed
#       ansible.builtin.apt:
#         name: snmpd
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure rsync service is not installed
#       ansible.builtin.apt:
#         name: rsync
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure NIS Server is not installed
#       ansible.builtin.apt:
#         name: nis
#         state: absent
#       when: is_ubuntu_18

#   tags:
#     [
#       "cis_2.1.10",
#       "cis_2.1.11",
#       "cis_2.1.12",
#       "cis_2.1.13",
#       "cis_2.1.14",
#       "cis_2.1.16",
#       "cis_2.1.17",
#     ]

# - name: Ensure certain client packages are not installed (cis_2.2.1-2.2.6)
#   block:
#     - name: Ensure NIS Client is not installed
#       ansible.builtin.apt:
#         name: nis,nisplus
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure rsh client is not installed
#       ansible.builtin.apt:
#         name: rsh-client
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure talk client is not installed
#       ansible.builtin.apt:
#         name: talk
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure telnet client is not installed
#       ansible.builtin.apt:
#         name: telnet
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure LDAP client is not installed
#       ansible.builtin.apt:
#         name: libpam-ldapd,ldap-utils
#         state: absent
#       when: is_ubuntu_18

#     - name: Ensure RPC is not installed
#       ansible.builtin.apt:
#         name: rpcbind
#         state: absent
#       when: is_ubuntu_18

#   tags:
#     [
#       "cis_2.2.1",
#       "cis_2.2.2",
#       "cis_2.2.3",
#       "cis_2.2.4",
#       "cis_2.2.5",
#       "cis_2.2.6",
#     ]
