---
# tasks/basic_system_settings.yml

- name: Ensure updates, patches, and additional security software are installed
  apt:
    upgrade: safe
    update_cache: yes

- name: Disable unused filesystems
  block:
    - name: Disable mounting of cramfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install cramfs /bin/true"
        create: yes
      register: disable_cramfs
      tags: ["cis_1.1.1.1"]

    - name: Disable mounting of freevxfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install freevxfs /bin/true"
        create: yes
      register: disable_freevxfs
      tags: ["cis_1.1.1.2"]

    - name: Disable mounting of jffs2 filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install jffs2 /bin/true"
        create: yes
      register: disable_jffs2
      tags: ["cis_1.1.1.3"]

    - name: Disable mounting of hfs filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install hfs /bin/true"
        create: yes
      register: disable_hfs
      tags: ["cis_1.1.1.4"]

    - name: Disable mounting of hfsplus filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install hfsplus /bin/true"
        create: yes
      register: disable_hfsplus
      tags: ["cis_1.1.1.5"]

    - name: Disable mounting of udf filesystem
      lineinfile:
        path: /etc/modprobe.d/cis.conf
        line: "install udf /bin/true"
        create: yes
      register: disable_udf
      tags: ["cis_1.1.1.6"]

- name: Check if /tmp is on a separate partition (cis_1.1.2)
  command: findmnt -n -o TARGET --target /tmp
  changed_when: false
  register: tmp_partition_check
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
  tags: ["cis_1.1.2"]

- name: Display warning if /tmp is not on a separate partition (cis_1.1.2)
  debug:
    msg: "WARNING: /tmp is not on a separate partition. Please create a separate partition for /tmp and mount it."
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" and tmp_partition_check.stdout != "/tmp"
  tags: ["cis_1.1.2"]

- name: Check if /tmp is mounted with nodev option (cis_1.1.3)
  shell: "mount | grep '/tmp' | grep 'nodev'"
  register: tmp_nodev_check
  changed_when: false
  failed_when: false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
  tags: ["cis_1.1.3"]

- name: Display warning if /tmp is not mounted with nodev option (cis_1.1.3)
  debug:
    msg: "WARNING: /tmp is not mounted with 'nodev' option. Please update /etc/fstab and remount with 'nodev' option."
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" and tmp_nodev_check.rc != 0
  tags: ["cis_1.1.3"]

- name: Check if /tmp is mounted with nosuid option (cis_1.1.4)
  shell: "mount | grep '/tmp' | grep 'nosuid'"
  register: tmp_nosuid_check
  changed_when: false
  failed_when: false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
  tags: ["cis_1.1.4"]

- name: Display warning if /tmp is not mounted with nosuid option (cis_1.1.4)
  debug:
    msg: "WARNING: /tmp is not mounted with 'nosuid' option. Please update /etc/fstab and remount with 'nosuid' option."
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" and tmp_nosuid_check.rc != 0
  tags: ["cis_1.1.4"]

- name: Check if /tmp is mounted with noexec option (cis_1.1.5)
  shell: "mount | grep '/tmp' | grep 'noexec'"
  register: tmp_noexec_check
  changed_when: false
  failed_when: false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
  tags: ["cis_1.1.5"]

- name: Display warning if /tmp is not mounted with noexec option (cis_1.1.5)
  debug:
    msg: "WARNING: /tmp is not mounted with 'noexec' option. Please update /etc/fstab and remount with 'noexec' option."
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" and tmp_noexec_check.rc != 0
  tags: ["cis_1.1.5"]
# - name: Ensure sticky bit is set on all world-writable directories
#   command: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 -exec chmod a+t {} +
#   args:
#     warn: no
#   tags: ['cis_1.1.22']

# - name: Disable core dumps
#   lineinfile:
#     path: /etc/security/limits.conf
#     line: "{{ item }} hard core 0"
#     create: yes
#     state: present
#   loop:
#     - "*"
#     - "root"
#   tags: ["cis_1.5.1"]

# - name: Set proper permissions for system-wide cron configuration files
#   file:
#     path: "{{ item }}"
#     owner: root
#     group: root
#     mode: "0600"
#   with_items:
#     - /etc/crontab
#     - /etc/cron.hourly
#     - /etc/cron.daily
#     - /etc/cron.weekly
#     - /etc/cron.monthly
#     - /etc/cron.d
#   tags:
#     [
#       "cis_5.1.1",
#       "cis_5.1.2",
#       "cis_5.1.3",
#       "cis_5.1.4",
#       "cis_5.1.5",
#       "cis_5.1.6",
#     ]

# - name: Ensure at/cron is restricted to authorized users
#   file:
#     path: "{{ item }}"
#     owner: root
#     group: cron
#     mode: "0640"
#   with_items:
#     - /etc/cron.deny
#     - /etc/at.deny
#   failed_when: False
#   tags: ["cis_5.1.7", "cis_5.1.8"]

# - name: Set proper permissions for user-specific cron configuration files
#   command: chown root:root /var/spool/cron/crontabs/*
#   args:
#     warn: no
#   tags: ["cis_5.1.9"]

# - name: Ensure SSH MaxAuthTries is set to 4 or less
#   lineinfile:
#     path: /etc/ssh/sshd_config
#     regexp: "^MaxAuthTries"
#     line: "MaxAuthTries 4"
#     state: present
#   tags: ["cis_5.2.5"]
